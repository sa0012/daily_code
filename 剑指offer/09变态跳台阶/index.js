// 一只青蛙一次可以跳上1级台阶，也可以跳上2级……它也可以跳上n级。求该青蛙跳上一个n级的台阶总共有多少种跳法。
// 算法分析：
// 从前面的分析只允许跳1/2步得出： f(n) = f(n - 1) + f(n - 2);
  // 1. 如果不限制跳步的次数， 那么可以得出 f(n) = f(n - 1) + f(n - 3) + ... + f(1);
  // 2. f(n - 1) = f(n - 2) + f(n - 3) + ... + f(1);
  // 3. ...
  // 4. f(1) = 1;
  // 5. f(n) = 2 * f(n - 1);
function jumpFloorII(number) {
  // write code here
  let n = 1;
  while(--number) {
    2 *= n;
  }

  return n;
}
