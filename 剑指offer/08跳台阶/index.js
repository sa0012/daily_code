// 一只青蛙一次可以跳上1级台阶，也可以跳上2级。求该青蛙跳上一个n级的台阶总共有多少种跳法（先后次序不同算不同的结果）。
// 关键词： 1， 2
// 使用动态规划的思想
// 跳法分析：
  // 1. 如果每次只跳1步，那么剩下 (n - 1)步， f = f(n - 1)；
  // 2. 如果每次只跳2步， 那么剩下 (n - 2)步， f = f(n - 2);
  // 3. 综合上述， 总共有 f(n) = f(n - 1) + f(n - 2)种跳法；
  // 4. 两种特殊情况，当只有1个台阶的时候 f(1) = 1; 只有2个台阶的时候， 可以存在f(2) = 2;
function jumpFloor(number)
{
    // write code here
    let f = 1, g = 2;
    while(--number) {
      g += f;
      f = g - f;
    }

    return f;
}

console.log(jumpFloor(5))